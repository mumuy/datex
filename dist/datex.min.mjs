/*!
 * datex.js v1.0.19
 * a datetime format library
 * https://passer-by.com/datex/
 *
 * Copyright (c) 2022-present, HaoLe Zheng
 *
 * Released under the MIT License
 * https://github.com/mumuy/datex
 *
 * Created on: 2025-07-03
 */
function a(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(a=function(){return!!e})()}function e(a,i){return e=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(a,e){return a.__proto__=e,a},e(a,i)}function i(i,t,r){if(a())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var o=new(i.bind.apply(i,n));return r&&e(o,r.prototype),o}function t(a,e){(null==e||e>a.length)&&(e=a.length);for(var i=0,t=Array(e);i<e;i++)t[i]=a[i];return t}function r(a,e){if(a){if("string"==typeof a)return t(a,e);var i={}.toString.call(a).slice(8,-1);return"Object"===i&&a.constructor&&(i=a.constructor.name),"Map"===i||"Set"===i?Array.from(a):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?t(a,e):void 0}}function n(a){return function(a){if(Array.isArray(a))return t(a)}(a)||function(a){if("undefined"!=typeof Symbol&&null!=a[Symbol.iterator]||null!=a["@@iterator"])return Array.from(a)}(a)||r(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var o=["year","month","day","hour","minute","second","millsecond"],c=[1970,1,1,0,0,0,0],u={year:31536e6,month:2592e6,day:864e5,hour:36e5,minute:6e4,second:1e3,millsecond:1},s={Y:"year",M:"month",D:"day",H:"hour",m:"minute",s:"second",S:"millsecond",W:"week"};function m(a){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},m(a)}function A(a){return null!=a&&("object"==m(a)||"function"==typeof a)}function l(a){return"number"==typeof a&&!isNaN(a)}function f(a){return"string"==typeof a}function h(a){return"function"==typeof a}function d(a){return a instanceof Date}var g=[],p={_date:null,parse:function(){for(var a=arguments.length,e=new Array(a),t=0;t<a;t++)e[t]=arguments[t];var r,u=e.slice(0);if(u.length&&u[0]){if(Object.getPrototypeOf(u[0])==Object.getPrototypeOf(this))return this._date=u[0].toDate(),u[0];if(d(u[0]))this._date=u[0];else{if(r=u[0],Array.isArray(r)?u=c.map((function(a,e){return u[0][e]||a})):A(u[0])&&(u=c.map((function(a,e){return u[0][o[e]]||a}))),1==u.length&&f(u[0])){var s=u[0].match(/(\d{1,4})[\-\/](\d{1,2})[\-\/](\d{1,2})([\sT](\d{1,2})?:(\d{1,2})?(:(\d{1,2}))?(\.(\d{1,3}))?)?/),m=u[0].match(/(\d{1,2})[\-\/](\d{1,2})[\-\/](\d{3,4})([\sT](\d{1,2})?:(\d{1,2})?(:(\d{1,2}))?(\.(\d{1,3}))?)?/),h=u[0].match(/^([12]\d{3})(\d{2})(\d{2})(\d{2})?(\d{2})?(\d{2})?(\d{1,3})?/);s&&!m?u=[1,2,3,5,6,8,10].map((function(a,e){return+(s[a]||c[e])})):m?u=[3,1,2,5,6,8,10].map((function(a,e){return+(m[a]||c[e])})):h&&(u=[1,2,3,4,5,6,7].map((function(a,e){return+(h[a]||c[e])})))}u.length>=3&&u[1]--,this._date=i(Date,n(u)),u.length>=2&&l(u[0])&&u[0]<100&&this._date.setFullYear(u[0])}}else this._date=new Date;return this},init:function(){for(var a=arguments.length,e=new Array(a),i=0;i<a;i++)e[i]=arguments[i];this.parse.apply(this,e);var t=this;return g.forEach((function(a){a.bind(t).apply(void 0,e)})),this},onInit:function(a){g.push(a)}};function y(){for(var a=arguments.length,e=new Array(a),t=0;t<a;t++)e[t]=arguments[t];return i(y.prototype.init,e)}y.now=Date.now,y.extend=function(a){a(y,p)},y.prototype=p,p.init.prototype=p;var v={};"undefined"!=typeof globalThis?v=globalThis:"undefined"!=typeof self?v=self:"undefined"!=typeof window?v=window:"undefined"!=typeof global&&(v=global);var b=v;b.structuredClone||(b.structuredClone=function(a){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.transfer,t=new Set(void 0===i?[]:i);if(null===a||"object"!==m(a))return a;if(a instanceof Date)return new Date(a.getTime());if(a instanceof RegExp)return new RegExp(a);if(a instanceof Set){var r=new Set;return a.forEach((function(a){t.has(a)?r.add(a):r.add(b.structuredClone(a,e))})),r}if(a instanceof Map){var o=new Map;return a.forEach((function(a,i){var r=t.has(i)?i:b.structuredClone(i,e),n=t.has(a)?a:b.structuredClone(a,e);o.set(r,n)})),o}if(a instanceof ArrayBuffer)return t.has(a)?(t.delete(a),a):a.slice();if(ArrayBuffer.isView(a))return t.has(a.buffer)?(t.delete(a.buffer),a):new a.constructor(a);if(a instanceof DOMException)return new DOMException(a.message,a.name);if(a instanceof Error){var c=new a.constructor(a.message);return Object.getOwnPropertyNames(a).forEach((function(i){"message"!==i&&"name"!==i&&(c[i]=b.structuredClone(a[i],e))})),c}var u=Array.isArray(a)?[]:{},s=new WeakMap;return s.set(a,u),[].concat(n(Object.getOwnPropertyNames(a)),n(Object.getOwnPropertySymbols(a))).forEach((function(i){var r=Object.getOwnPropertyDescriptor(a,i);if(!r||r.writable||r.configurable){var n=a[i];t.has(n)?u[i]=n:"object"===m(n)&&null!==n?s.has(n)?u[i]=s.get(n):(u[i]=b.structuredClone(n,e),s.set(n,u[i])):u[i]=n}})),Object.setPrototypeOf(u,Object.getPrototypeOf(a)),u});var M=b.structuredClone;function _(a){var e=function(a,e){if("object"!=m(a)||!a)return a;var i=a[Symbol.toPrimitive];if(void 0!==i){var t=i.call(a,e||"default");if("object"!=m(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(a)}(a,"string");return"symbol"==m(e)?e:e+""}function T(a,e){for(var i=0;i<e.length;i++){var t=e[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(a,_(t.key),t)}}function E(a,e,i){S(a,e),e.set(a,i)}function S(a,e){if(e.has(a))throw new TypeError("Cannot initialize the same private elements twice on an object")}function k(a,e){return a.get(w(a,e))}function P(a,e,i){return a.set(w(a,e),i),i}function w(a,e,i){if("function"==typeof a?a===e:a.has(e))return arguments.length<3?e:i;throw new TypeError("Private element is not present on this object")}var C=new WeakMap,O=new WeakMap,j=new WeakSet,D=function(){return a=function a(){var e,i;!function(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),S(e=this,i=j),i.add(e),E(this,C,null),E(this,O,null);var t=this;t.value=0;for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];if(2==n.length)A(n[0])&&A(n[1])?(P(C,t,n[0]),P(O,t,n[1]),t.value=k(C,t).getTime()-k(O,t).getTime()):l(n[0])&&f(n[1])&&t.change(n[1],n[0]);else if(1==n.length)if(A(n[0]))for(var c in n[0])t.change(c,n[0][c]);else l(n[0])&&(t.value+=n[0])},e=[{key:"change",value:function(a,e){var i=this;return k(C,i)&&k(O,i)?(k(C,i).change(a,e),i.value=k(C,i).getTime()-k(O,i).getTime()):u[a]&&(i.value+=u[a]*e),i}},{key:"get",value:function(a){var e=this;if(a){if(k(C,e)&&k(O,e)){var i=k(C,e),t=k(O,e),r=e.value,n=0;return"month"==a?(n=12*(i.get("year")-1)+i.get("month")-(12*(t.get("year")-1)+t.get("month")))<0&&i.get("day")>t.get("day")?n+=1:n>0&&i.get("day")<t.get("day")&&(n-=1):"year"==a?(n=i.get("year")-t.get("year"))<0&&(i.get("month")>t.get("month")||i.get("month")==t.get("month")&&i.get("day")>t.get("day"))?n+=1:n>0&&(i.get("month")<t.get("month")||i.get("month")==t.get("month")&&i.get("day")<t.get("day"))&&(n-=1):u[a]&&(n=~~(r/u[a])),n}return u[a]&&Math.floor(e.value/u[a])||0}return e.value}},{key:"toObject",value:function(){var a=this;return Object.assign({value:a.value},w(j,a,B).call(a,o))}},{key:"format",value:function(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"YYYY-MM-DD HH:mm:ss";if(f(a)){var e=[];a.match(/Y+|M+|D+|H+|m+|s+|S+/g).forEach((function(a){var i=s[a[0]];e.includes(i)||e.push(i)}));var i=w(j,this,B).call(this,e),t={Y:""+i.year,M:""+i.month,D:""+i.day,H:""+i.hour,m:""+i.minute,s:""+i.second,S:""+i.millsecond};return a.replace(/Y+|M+|D+|H+|m+|s+|S+/g,(function(a){if(t[a])return t[a];if(t[a[0]]){var e=t[a[0]]<0,i=Math.abs(t[a[0]]).toString().padStart(a.length,"0");return e?"-"+i:i}return""}))}if(h(a))return a(this.toObject()).toString()||""}}],e&&T(a.prototype,e),i&&T(a,i),Object.defineProperty(a,"prototype",{writable:!1}),a;var a,e,i}();function B(a){var e=this,i={};if(k(C,e)&&k(O,e)){var t=e.value,r=k(C,e).clone(),n=k(O,e).clone();a.forEach((function(a){i[a]=e.get(a),e.change(a,-i[a])})),e.value=t,P(C,e,r),P(O,e,n)}else{var o=e.value;a.forEach((function(a){u[a]&&(i[a]=Math.floor(o/u[a])||0,o%=u[a])}))}return i}var G={name:"en-us",format:{MMM:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"],MMMM:["January","February","March","April","May","June","July","August","September","October","November","December"],Do:["1st","2nd","3rd","4th","5th","6th","7th","8th","9th","10th","11th","12th","13th","14th","15th","16th","17th","18th","19th","20th","21st","22nd","23rd","24th","25th","26th","27th","28th","29th","30th","31st"],WW:["Sun","Mon","Tues","Wed","Thur","Fri","Sat"],WWW:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},duration:{"past moments":"just now","future moments":"moments later",now:"now"}},I={name:"zh-cn",format:{MMM:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],MMMM:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],Do:["1日","2日","3日","4日","5日","6日","7日","8日","9日","10日","11日","12日","13日","14日","15日","16日","17日","18日","19日","20日","21日","22日","23日","24日","25日","26日","27日","28日","29日","30日","31日"],WW:["周日","周一","周二","周三","周四","周五","周六"],WWW:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},duration:{"past moments":"刚刚","future moments":"片刻后",now:"现在"}};function W(a,e){return function(a){if(Array.isArray(a))return a}(a)||function(a,e){var i=null==a?null:"undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(null!=i){var t,r,n,o,c=[],u=!0,s=!1;try{if(n=(i=i.call(a)).next,0===e){if(Object(i)!==i)return;u=!1}else for(;!(u=(t=n.call(i)).done)&&(c.push(t.value),c.length!==e);u=!0);}catch(a){s=!0,r=a}finally{try{if(!u&&null!=i.return&&(o=i.return(),Object(o)!==o))return}finally{if(s)throw r}}return c}}(a,e)||r(a,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var z=["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia_Banderas","America/Bahia","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson_Creek","America/Dawson","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Nuuk","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port_of_Spain","America/Port-au-Prince","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qostanay","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/North","Australia/NSW","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","CET","Chile/Continental","Chile/EasterIsland","CST6CDT","Cuba","EET","Egypt","Eire","EST","EST5EDT","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT0","Etc/Greenwich","Etc/UCT","Etc/Universal","Etc/UTC","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","GB-Eire","GB","GMT-0","GMT","GMT+0","GMT0","Greenwich","Hongkong","HST","Iceland","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","MST","MST7MDT","Navajo","NZ-CHAT","NZ","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kanton","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap","Poland","Portugal","PRC","PST8PDT","ROC","ROK","Singapore","Turkey","UCT","Universal","US/Alaska","US/Aleutian","US/Arizona","US/Central","US/East-Indiana","US/Eastern","US/Hawaii","US/Indiana-Starke","US/Michigan","US/Mountain","US/Pacific","US/Samoa","UTC","W-SU","WET","Zulu"];[function(a,e){Object.assign(e,{toDate:function(){return this._date},toObject:function(){var a=this._date;return{year:a.getFullYear(),month:a.getMonth()+1,day:a.getDate(),hour:a.getHours(),minute:a.getMinutes(),second:a.getSeconds(),millsecond:a.getMilliseconds(),timestamp:a.getTime(),week:a.getDay()}},toArray:function(){var a=this.toObject();return o.map((function(e){return a[e]}))},toString:function(){return this._date.toString()},toISOString:function(){return this._date.toISOString()},getTime:function(){return this._date.getTime()},getUnix:function(){return~~(this._date.getTime()/1e3)},clone:function(){var e=a(this.getTime());return Object.assign(e,M(this))},isValid:function(){return l(this.getTime())},set:function(a,e){var i=this._date,t=this.toObject();switch(a){case"year":i.setFullYear(e);break;case"month":i.setMonth(e-1);break;case"day":i.setDate(e);break;case"hour":i.setHours(e);break;case"minute":i.setMinutes(e);break;case"second":i.setSeconds(e);break;case"millsecond":i.setMilliseconds(e);break;case"timestamp":i.setTime(e);break;case"week":i.setDate(t.day-t.week+e)}return this},change:function(a,e){var i=this.toObject();return["day","hour","minute","second","millsecond"].includes(a)?this.set("timestamp",i.timestamp+e*u[a]):this.set(a,i[a]+e)},get:function(a){return this.toObject()[a]},format:function(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"YYYY-MM-DD HH:mm:ss";if(f(a)){var e=this._date,i=this.toObject(),t=e.toTimeString().match(/GMT([\+\-])(\d{2})(\d{2})/),r={YYYY:(""+i.year).padStart(4,"0"),YY:(""+i.year%100).padStart(2,"0"),M:""+i.month,D:""+i.day,H:""+i.hour,h:""+i.hour%12,m:""+i.minute,s:""+i.second,S:""+~~(i.millsecond/100),SS:""+~~(i.millsecond/10),SSS:""+i.millsecond,Z:t[1]+t[2]+":"+t[3],ZZ:t[1]+t[2]+t[3],A:["AM","PM"][~~(i.hour/12)],a:["am","pm"][~~(i.hour/12)],X:i.timestamp,x:~~(i.timestamp/1e3),Q:""+~~(i.month/3),W:i.week};return a.replace(/Y+|M+|Do|D+|H+|h+|m+|s+|S+|Z+|A|a|X|x|Q|W+/g,(function(a){return r[a]||r[a[0]].padStart(a.length,"0")||""}))}if(h(a))return a(this.toObject())||""}})},function(a,e){Object.assign(e,{endOf:function(a){return this.startOf(a).change(a,"week"==a?7:1).change("millsecond",-1)},startOf:function(e){var i=this.clone();if("timestamp"==e)return i;if("week"==e){var t=i.toObject();return a(t.year,t.month,t.day-t.week,0,0,0,0)}var r=o.indexOf(e)+1,u=c.slice(r),s=i.toArray();return s.splice.apply(s,[r,u.length].concat(n(u))),a.apply(void 0,n(s))}})},function(a,e){Object.assign(e,{isAfter:function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"timestamp";return e=a(e),this.get(i)>e.get(i)},isBefore:function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"timestamp";return e=a(e),this.get(i)<e.get(i)},isBetween:function(e,i){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"timestamp";return e=a(e),i=a(i),this.get(t)>e.get(t)&&this.get(t)<i.get(t)},isSame:function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"timestamp";return e=a(e),this.get(i)==e.get(i)}})},function(a,e){Object.assign(a,{duration:function(){for(var a=arguments.length,e=new Array(a),t=0;t<a;t++)e[t]=arguments[t];return i(D,e)}}),Object.assign(e,{diffWith:function(e,i){if(!(e=a(e)).isValid())return 0;var t=a.duration(this,e);return i?t.get(i):t},fromNow:function(){var e=a(),i=a.duration(this,e).toObject(),t=i.value<0,r="",n=a.getLanguage(),o=this.getLanguageCode(),c=new Intl.RelativeTimeFormat(o,{numeric:"auto"});return["year","month","day","hour","minute","second"].forEach((function(a){var e=i[a];!r&&e&&(r=c.format(e,a))})),r||(r=i.value?t?n.duration["past moments"]:n.duration["future moments"]:n.duration.now),r}})},function(a,e){var i,t={};[G,I].forEach((function(a){t[a.name]=a}));var r=(null===globalThis||void 0===globalThis||null===(i=globalThis.navigator)||void 0===i?void 0:i.language.toLowerCase())||"en-us";"zh"==r&&(r="zh-cn"),Object.assign(a,{setLanguage:function(a){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return a=a.toLowerCase(),t[a]=Object.assign(t[a]||{},e),this},switchLanguage:function(a){return r=a.toLowerCase(),this},getLanguage:function(){return t[r]||t["en-us"]},getLanguageCode:function(){return r}}),Object.assign(e,{_langMap:{},_lang:null,setLanguage:function(a){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return a=a.toLowerCase(),this._langMap[a]=Object.assign(this._langMap[a]||{},e),this},switchLanguage:function(a){return this._lang=a.toLowerCase(),this},getLanguage:function(){return this._langMap[this._lang]},getLanguageCode:function(){return this._lang}}),e.onInit((function(){this._langMap=Object.assign(this._langMap,t),this._lang=r}));var n=e.format;Object.assign(e,{format:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"YYYY-MM-DD HH:mm:ss";if(f(e)){var i=this,t=this.toObject(),r=a.getLanguage()||this.getLanguage(),o={};return o.MMMM=r.format.MMMM[t.month-1],o.MMM=r.format.MMM[t.month-1],o.Do=r.format.Do[t.day-1],o.WWW=r.format.WWW[t.week],o.WW=r.format.WW[t.week],e.replace(/Y+|M+|Do|D+|H+|h+|m+|s+|S+|Z+|A|a|X|x|Q|W+/g,(function(a){return o[a]?o[a]:n.bind(i)(a)}))}return n.bind(this)(e)}})},function(a,e){var i=Intl.DateTimeFormat().resolvedOptions().timeZone,t=0,r="undefined"!=typeof Intl&&Intl.supportedValuesOf?Intl.supportedValuesOf("timeZone"):[],o={"Africa/Asmera":"Africa/Asmara","America/Buenos_Aires":"America/Argentina/Buenos_Aires","America/Argentina/ComodRivadavia":"America/Argentina/Buenos_Aires","America/Catamarca":"America/Argentina/Buenos_Aires","America/Cordoba":"America/Argentina/Buenos_Aires","America/Jujuy":"America/Argentina/Buenos_Aires","America/Mendoza":"America/Argentina/Buenos_Aires","America/Argentina/Catamarca":"America/Argentina/Buenos_Aires","America/Argentina/Cordoba":"America/Argentina/Buenos_Aires","America/Argentina/Jujuy":"America/Argentina/Buenos_Aires","America/Argentina/Mendoza":"America/Argentina/Buenos_Aires","America/Creston":"America/Dawson_Creek","America/Lower_Princes":"America/St_Thomas","Pacific/Truk":"Pacific/Chuuk","America/Fort_Wayne":"America/Indiana/Indianapolis","America/Coral_Harbour":"America/Panama","America/Godthab":"America/Nuuk","America/Indianapolis":"America/Indiana/Indianapolis","America/Louisville":"America/Kentucky/Louisville","America/Virgin":"America/Port_of_Spain","Asia/Saigon":"Asia/Ho_Chi_Minh","Asia/Katmandu":"Asia/Kathmandu","Asia/Calcutta":"Asia/Kolkata","Asia/Rangoon":"Asia/Yangon","Atlantic/Faeroe":"Atlantic/Faroe","Europe/Kiev":"Europe/Kyiv","Pacific/Ponape":"Pacific/Pohnpei","Pacific/Enderbury":"Pacific/Kanton"},c={};Object.entries(o).forEach((function(a){var e=W(a,2),i=e[0],t=e[1];c[t]=i}));var u=function(a,e){var i=e.replace(/\s/g,"").match(/(GMT|UTC)(\+|\-)?(\d{1,2})(\.|:)(\d{1,2})/);if(i){var t=W(i,6);t[0],t[1];var r=t[2],n=t[3],o=t[4],u=t[5],m=0;return m=":"==o?60*Number(n)+Number(u):60*Number(n+o+u),"+"!=r&&r||(m=-m),6e4*(a.getTimezoneOffset()-m)}var A=function(a,e){return s(e)||c[e]&&(e=c[e]),new Date(a.toLocaleString("en-US",{timeZone:e}))}(a,e).getTime()-a.getTime();return A=6e4*Math.ceil(A/6e4)},s=function(a){try{return new Intl.DateTimeFormat("en-US",{timeZone:a}),!0}catch(a){return!1}},m=new Date;Object.assign(a,{isSupportedTimezone:function(a){var e=s(a);return e||!!c[a]},getSupportedTimezones:function(){var a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=(arguments.length>1&&void 0!==arguments[1]&&arguments[1]||!r.length?z:r).map((function(e){return a?function(a){try{return a=new Intl.DateTimeFormat("en-US",{timeZone:a}).resolvedOptions().timeZone,o[a]&&(a=o[a]),a}catch(e){return a}}(e):e}));return n(new Set(e))},switchTimezone:function(a){return t=u(m,i=a),this},getTimezoneOffset:function(){return(new Date).getTimezoneOffset()-t/6e4},getTimezone:function(){return i}}),Object.assign(e,{_timezone:null,_offset:0,switchTimezone:function(a){this._timezone=a;var e=this._date||m;return this._offset=u(e,this._timezone),this},getTimezoneOffset:function(){return this._date.getTimezoneOffset()-this._offset/6e4},getTimezone:function(){return this._timezone},isDayLightSavingTime:function(){return this.getTimezoneOffset()<this.clone().set("month",1).getTimezoneOffset()||this.getTimezoneOffset()<this.clone().set("month",6).getTimezoneOffset()}}),e.onInit((function(){this._timezone=i,this._offset=t,arguments.length&&(arguments.length<=0?void 0:arguments[0])&&(d(arguments.length<=0?void 0:arguments[0])||(arguments.length<=0?void 0:arguments[0])instanceof a||1==arguments.length&&l(arguments.length<=0?void 0:arguments[0])||t&&this._date.setTime(this._date.getTime()-t))}));var A=e.set,f=e.toObject;Object.assign(e,{toObject:function(){var a=this.clone();return a._date.setTime(a._date.getTime()+a._offset),f.bind(a)()},set:function(a,e){var i=this._date.getTime();this._date.setTime(i+this._offset);var t=A.bind(this)(a,e),r=t._date||m;return t._offset=u(r,t._timezone),i=t._date.getTime(),t._date.setTime(i-t._offset),t}})},function(a,e){var i=a.getLanguage();e.onInit((function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n=t.slice(0);if(n.length&&n[0]&&2==n.length&&f(n[0])&&f(n[1])){var c=function(e,t){var r=[],n=t.replace(/Y+|M+|Do|D+|H+|h+|m+|s+|S+|Z+|A|a|X|x|Q|W+/g,(function(a,e){if(i.format[a]){if(["MMM","MMMM"].includes(a))return r.push("month"),"("+i.format[a].join("|")+")";if(["Do"].includes(a))return r.push("day"),"("+i.format[a].join("|")+")";if(["WW","WWW"].includes(a))return r.push("week"),"("+i.format[a].join("|")+")"}else{if(s[a[0]])return r.push(s[a[0]]),"(\\d{1,"+a.length+"})";if(["h","hh"].includes(a))return r.push("hour_12"),"(\\d{1,2})";if("ZZ"==a)return r.push("timezone"),"(-?\\d{2}\\d{2})";if("Z"==a)return r.push("timezone"),"(-?\\d{2}:\\d{2})";if("A"==a)return r.push("am_pm"),"(AM|PM)";if("a"==a)return r.push("am_pm"),"(am|pm)";if("X"==a)return r.push("timestamp"),"(d+)";if("x"==a)return r.push("unix"),"(d+)"}return a})),c={},u=e.match(new RegExp(n));u&&u.slice(1).forEach((function(a,e){var i=r[e];c[i]=a}));var m={};return o.forEach((function(a){+c[a]&&(m[a]=+c[a])})),c.hour_12?(m.hour=+c.hour_12,c.am_pm&&["PM","pm"].includes(c.am_pm)&&(m.hour+=12)):c.timestamp?m=a(c.timestamp).toObject():c.unix&&(m=a(1e3*c.unix).toObject()),m}(n[0],n[1]);Object.keys(c).length?this._date=a(c).toDate():this._date=new Date("")}}))}].forEach(y.extend);export{y as default};
